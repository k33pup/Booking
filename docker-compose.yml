services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./hotel_svc/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - booking_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - booking_network

  hotel_svc:
    container_name: hotel_service
    build:
      context: ./hotel_svc
      dockerfile: Dockerfile
    env_file:
      - ./hotel_svc/.env
      - .env
    ports:
      - "9091:${HOTEL_GRPC_SERVER_PORT}"
      - "9092:${HOTEL_HTTP_SERVER_PORT}"
    networks:
      - booking_network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  booking_network:
    driver: bridge
    name: booking_network

volumes:
  postgres-data:
  pgadmin-data:
